#+title: Report
#+PROPERTY: header-args:R :session *cardano-perf-report* :cache yes :dir ./


#+begin_src R :results silent
library("ggridges")
library("tidyverse")
library("rstatix")
library("tables")

options(scipen = 999)

data_dir <- "./data/"

load_data <- function(filename, ghc, branch) {
  read_tsv(paste(data_dir, filename, sep = "")) %>%
    mutate(GHC = as.factor(ghc), Branch = as.factor(branch))
}

##### Some comments
## we have paired data because each slot no. is unique and repeats in each
## dataset. This is due to the fact that beacon and db analyzer re-run the
## ledger. Thus we have to use pairwise statistical tests.
##
## Essentially, each slotNo is an observation and these are not independant
## between samples of different GHC versions and branches

## time units are nanoseconds
## smoke_test     <- load_data("ledger-ops-cost-51db69467fb2fef8829f7f62385cdaf30f68118e-haskell810-from-63-nr-blocks-100.csv", 810, "smoke_test")
df810_baseline <- load_data("ledger-ops-cost-e3917f684e8b60e7bfc453d6d8114b800bdf167d-haskell810-from-63-nr-blocks-100000.csv", 810, "baseline")
df92_baseline  <- load_data("ledger-ops-cost-e3917f684e8b60e7bfc453d6d8114b800bdf167d-haskell-from-63-nr-blocks-100000.csv", 92, "baseline")
df96_baseline  <- load_data("ledger-ops-cost-e3917f684e8b60e7bfc453d6d8114b800bdf167d-haskell96-from-63-nr-blocks-100000.csv", 96, "baseline")

df810Split_umelem <- load_data("ledger-ops-cost-a929cd7616668b61bea38486b1641d5d45f13442-haskell810-from-63-nr-blocks-100000.csv", 810, "SplitUMElem")
df92Split_umelem  <- load_data("ledger-ops-cost-a929cd7616668b61bea38486b1641d5d45f13442-haskell-from-63-nr-blocks-100000.csv", 92, "SplitUMElem")
df96Split_umelem  <- load_data("ledger-ops-cost-a929cd7616668b61bea38486b1641d5d45f13442-haskell96-from-63-nr-blocks-100000.csv", 96, "SplitUMElem")

df810_noFailT <- load_data("ledger-ops-cost-6dc508fd5c0ddb73e4a5e01877dfcd698b1c1bd0-haskell810-from-63-nr-blocks-100000.csv", 810, "NoFailT")
df92_noFailT  <- load_data("ledger-ops-cost-6dc508fd5c0ddb73e4a5e01877dfcd698b1c1bd0-haskell-from-63-nr-blocks-100000.csv", 92, "NoFailT")
df96_noFailT  <- load_data("ledger-ops-cost-6dc508fd5c0ddb73e4a5e01877dfcd698b1c1bd0-haskell96-from-63-nr-blocks-100000.csv", 96, "NoFailT")

df <- bind_rows(
  df810_baseline, df92_baseline, df96_baseline,
  df810Split_umelem, df92Split_umelem, df96Split_umelem,
  df810_noFailT, df92_noFailT, df96_noFailT
) %>%
  mutate(TestCase = paste(GHC, Branch, sep = "_")) %>%
  arrange(slot)
#+end_src

#+RESULTS:


Now we have our dataset, let's plot a bit:

#+begin_src R :exports both :results output graphics file :file plots/test.pdf
p <- ggplot(df, aes(totalTime,
                     y = TestCase,
                     fill = GHC)) +
  geom_density_ridges(alpha = .6) +
  scale_x_log10() +
  theme_minimal()
p
#+end_src

#+RESULTS[0feb6b0f2edadbe982053347c0f534d425434d27]:
[[file:plots/test.pdf]]
